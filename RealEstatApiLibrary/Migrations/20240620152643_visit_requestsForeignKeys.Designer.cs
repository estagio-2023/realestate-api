// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RealEstateApiLibrary.DataAccess;

#nullable disable

namespace RealEstateApiLibrary.Migrations
{
    [DbContext(typeof(RealEstateContext))]
    [Migration("20240620152643_visit_requestsForeignKeys")]
    partial class visit_requestsForeignKeys
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RealEstateApiLibrary.Entity.Agent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("agents");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.Amenities", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("amenities");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.City", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("cities");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.Customer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.RealEstate", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("build_date")
                        .HasColumnType("integer");

                    b.Property<int>("city_id")
                        .HasColumnType("integer");

                    b.Property<int>("customer_id")
                        .HasColumnType("integer");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("energy_class")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric");

                    b.Property<int>("realestate_id")
                        .HasColumnType("integer");

                    b.Property<int>("square_meter")
                        .HasColumnType("integer");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("typology_id")
                        .HasColumnType("integer");

                    b.Property<string>("zip_code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("realestates");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.RealEstateHasAmenities", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("amenities_id")
                        .HasColumnType("integer");

                    b.Property<int>("realestate_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("realestate_has_amenities");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.RealEstateType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("realestate_types");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.Typology", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("typologies");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.VisitRequest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("agent_id")
                        .HasColumnType("integer");

                    b.Property<bool>("confirmed")
                        .HasColumnType("boolean");

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("end_time")
                        .HasColumnType("interval");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("realestate_id")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("start_time")
                        .HasColumnType("interval");

                    b.HasKey("id");

                    b.HasIndex("agent_id");

                    b.HasIndex("realestate_id");

                    b.ToTable("visit_requests");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.VisitRequest", b =>
                {
                    b.HasOne("RealEstateApiLibrary.Entity.Agent", "Agent")
                        .WithMany("VisitRequests")
                        .HasForeignKey("agent_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RealEstateApiLibrary.Entity.RealEstate", "RealEstate")
                        .WithMany("VisitRequests")
                        .HasForeignKey("realestate_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("RealEstate");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.Agent", b =>
                {
                    b.Navigation("VisitRequests");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.RealEstate", b =>
                {
                    b.Navigation("VisitRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
