// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RealEstateApiLibrary.DataAccess;

#nullable disable

namespace RealEstateApiLibrary.Migrations
{
    [DbContext(typeof(RealEstateContext))]
    [Migration("20240618121202_CreateDb")]
    partial class CreateDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RealEstateApiLibrary.Entity.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)");

                    b.HasKey("Id");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.Amenities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Amenities");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Customeres");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.RealEstate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("BuildDate")
                        .HasColumnType("integer");

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EnergyClass")
                        .IsRequired()
                        .HasColumnType("char");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("RealEstateTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("SquareMeter")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TypologyId")
                        .HasColumnType("integer");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RealEstateTypeId");

                    b.HasIndex("TypologyId");

                    b.ToTable("RealEstates");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.RealEstateHasAmenities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AmenitiesId")
                        .HasColumnType("integer");

                    b.Property<int>("RealEstateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AmenitiesId");

                    b.HasIndex("RealEstateId");

                    b.ToTable("Realestate_has_amenities");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.RealEstateType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Realestate_types");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.Typology", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Typologies");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.VisitRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AgentId")
                        .HasColumnType("integer");

                    b.Property<bool>("Confirmed")
                        .HasColumnType("boolean");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("RealEstateId")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("RealEstateId");

                    b.ToTable("Visit_requests");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.RealEstate", b =>
                {
                    b.HasOne("RealEstateApiLibrary.Entity.City", "City")
                        .WithMany("RealEstates")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RealEstateApiLibrary.Entity.Customer", "Customer")
                        .WithMany("RealEstates")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RealEstateApiLibrary.Entity.RealEstateType", "RealEstateType")
                        .WithMany("RealEstates")
                        .HasForeignKey("RealEstateTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RealEstateApiLibrary.Entity.Typology", "Typology")
                        .WithMany("RealEstates")
                        .HasForeignKey("TypologyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Customer");

                    b.Navigation("RealEstateType");

                    b.Navigation("Typology");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.RealEstateHasAmenities", b =>
                {
                    b.HasOne("RealEstateApiLibrary.Entity.Amenities", "Amenities")
                        .WithMany("RealEstateHasAmenities")
                        .HasForeignKey("AmenitiesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RealEstateApiLibrary.Entity.RealEstate", "RealEstate")
                        .WithMany("RealEstateHasAmenities")
                        .HasForeignKey("RealEstateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Amenities");

                    b.Navigation("RealEstate");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.VisitRequest", b =>
                {
                    b.HasOne("RealEstateApiLibrary.Entity.Agent", "Agent")
                        .WithMany("VisitRequests")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RealEstateApiLibrary.Entity.RealEstate", "RealEstate")
                        .WithMany("VisitRequests")
                        .HasForeignKey("RealEstateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("RealEstate");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.Agent", b =>
                {
                    b.Navigation("VisitRequests");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.Amenities", b =>
                {
                    b.Navigation("RealEstateHasAmenities");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.City", b =>
                {
                    b.Navigation("RealEstates");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.Customer", b =>
                {
                    b.Navigation("RealEstates");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.RealEstate", b =>
                {
                    b.Navigation("RealEstateHasAmenities");

                    b.Navigation("VisitRequests");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.RealEstateType", b =>
                {
                    b.Navigation("RealEstates");
                });

            modelBuilder.Entity("RealEstateApiLibrary.Entity.Typology", b =>
                {
                    b.Navigation("RealEstates");
                });
#pragma warning restore 612, 618
        }
    }
}
